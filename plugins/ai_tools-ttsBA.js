const axios = require('axios');

let handler = async (m, { text, RyuuBotz, reply }) => {
  if (!text.includes('|')) {
    return reply(`‚å¨‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚å¨  
       *L I S T - K A R A K T E R*  
‚å¨‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚å¨  
  
‚Ä¢ *airi* - Airi ü©∑  
‚Ä¢ *akane* - Akane üå∏  
‚Ä¢ *akari* - Akari üß°  
‚Ä¢ *ako* - Ako üíº  
‚Ä¢ *aris* - Aris üéØ  
‚Ä¢ *arona* - Arona ü§ñ  
‚Ä¢ *aru* - Aru üí£  
‚Ä¢ *asuna* - Asuna üìö  
‚Ä¢ *atsuko* - Atsuko üßÉ  
‚Ä¢ *ayane* - Ayane ü¶ã  
‚Ä¢ *azusa* - Azusa üåô  
‚Ä¢ *cherino* - Cherino ‚ùÑÔ∏è  
‚Ä¢ *chihiro* - Chihiro üóÇÔ∏è  
‚Ä¢ *chinatsu* - Chinatsu üíä  
‚Ä¢ *chise* - Chise üî•  
‚Ä¢ *eimi* - Eimi üëì  
‚Ä¢ *erica* - Erica üéÄ  
‚Ä¢ *fubuki* - Fubuki üçÉ  
‚Ä¢ *fuuka* - Fuuka üß∫  
‚Ä¢ *hanae* - Hanae üíê  
‚Ä¢ *hanako* - Hanako üõèÔ∏è  
‚Ä¢ *hare* - Hare ü¶ä  
‚Ä¢ *haruka* - Haruka ü•ã  
‚Ä¢ *haruna* - Haruna üéØ  
‚Ä¢ *hasumi* - Hasumi üî´  
‚Ä¢ *hibiki* - Hibiki üéß  
‚Ä¢ *hihumi* - Hihumi üîÆ  
‚Ä¢ *himari* - Himari üåº  
‚Ä¢ *hina* - Hina üëë  
‚Ä¢ *hinata* - Hinata üêá  
‚Ä¢ *hiyori* - Hiyori üç≠  
‚Ä¢ *hoshino* - Hoshino ‚≠ê  
‚Ä¢ *iori* - Iori üí•  
‚Ä¢ *iroha* - Iroha üöÄ  
‚Ä¢ *izumi* - Izumi üçû  
‚Ä¢ *izuna* - Izuna üê∫  
‚Ä¢ *juri* - Juri üß™  
‚Ä¢ *kaede* - Kaede üçÅ  
‚Ä¢ *karin* - Karin üéØ  
‚Ä¢ *kayoko* - Kayoko üé≠  
‚Ä¢ *kazusa* - Kazusa ü•Ä  
‚Ä¢ *kirino* - Kirino üéÄ  
‚Ä¢ *koharu* - Koharu ‚òÄÔ∏è  
‚Ä¢ *kokona* - Kokona üê§  
‚Ä¢ *kotama* - Kotama üéÆ  
‚Ä¢ *kotori* - Kotori üê¶  
‚Ä¢ *main* - Main üéôÔ∏è  
‚Ä¢ *maki* - Maki üî´  
‚Ä¢ *mari* - Mari üç∞  
‚Ä¢ *marina* - Marina ‚öì  
‚Ä¢ *mashiro* - Mashiro üê±  
‚Ä¢ *michiru* - Michiru üé®  
‚Ä¢ *midori* - Midori üß©  
‚Ä¢ *miku* - Miku üíô  
‚Ä¢ *mimori* - Mimori üß∂  
‚Ä¢ *misaki* - Misaki üíÑ  
‚Ä¢ *miyako* - Miyako üéÄ  
‚Ä¢ *miyu* - Miyu ü¶à  
‚Ä¢ *moe* - Moe üí°  
‚Ä¢ *momoi* - Momoi üñ•Ô∏è  
‚Ä¢ *momoka* - Momoka üé§  
‚Ä¢ *mutsuki* - Mutsuki üéá  
‚Ä¢ *NP0013* - NP0013 ü§ñ  
‚Ä¢ *natsu* - Natsu ‚òÄÔ∏è  
‚Ä¢ *neru* - Neru üèçÔ∏è  
‚Ä¢ *noa* - Noa üíª  
‚Ä¢ *nodoka* - Nodoka üìñ  
‚Ä¢ *nonomi* - Nonomi üçî  
‚Ä¢ *pina* - Pina üç¨  
‚Ä¢ *rin* - Rin üå∏  
‚Ä¢ *saki* - Saki üéµ  
‚Ä¢ *saori* - Saori üî´  
‚Ä¢ *saya* - Saya üíâ  
‚Ä¢ *sena* - Sena üßÉ  
‚Ä¢ *serika* - Serika üéí  
‚Ä¢ *serina* - Serina üíä  
‚Ä¢ *shigure* - Shigure üåßÔ∏è  
‚Ä¢ *shimiko* - Shimiko üçì  
‚Ä¢ *shiroko* - Shiroko üö≤  
‚Ä¢ *shizuko* - Shizuko üì¶  
‚Ä¢ *shun* - Shun üéì  
‚Ä¢ *ShunBaby* - Shun (Baby ver.) üë∂  
‚Ä¢ *sora* - Sora ‚òÅÔ∏è  
‚Ä¢ *sumire* - Sumire üå∏  
‚Ä¢ *suzumi* - Suzumi üìö  
‚Ä¢ *tomoe* - Tomoe üé≠  
‚Ä¢ *tsubaki* - Tsubaki üõ°Ô∏è  
‚Ä¢ *tsurugi* - Tsurugi üó°Ô∏è  
‚Ä¢ *ui* - Ui üçì  
‚Ä¢ *utaha* - Utaha üñãÔ∏è  
‚Ä¢ *wakamo* - Wakamo üêç  
‚Ä¢ *yoshimi* - Yoshimi üç°  
‚Ä¢ *yuuka* - Yuuka üìè  
‚Ä¢ *yuzu* - Yuzu üçã  
‚Ä¢ *zunko* - Zunko üé∂  
  
Gunakan format:  
*.ttsba teks|karakter*  
  
Contoh:  
*.ttsba halo dunia|shiroko*`);
  }

  let [teks, char, speed] = text.split('|').map(v => v.trim());
  if (!teks || !char) return reply(`‚ùå Format salah!\nContoh: .ttsba Halo|shiroko`);
  speed = speed || '1';

  await RyuuBotz.sendMessage(m.chat, { react: { text: "‚è±Ô∏è", key: m.key } });

  try {
    const url = `https://api.nekorinn.my.id/tools/ttsba?text=${encodeURIComponent(teks)}&char=${encodeURIComponent(char)}&speed=${speed}`;
    const response = await axios.get(url, { responseType: 'arraybuffer' });

    await RyuuBotz.sendMessage(m.chat, {
      audio: Buffer.from(response.data),
      mimetype: 'audio/mpeg',
      ptt: false
    }, { quoted: m });

  } catch (err) {
    return reply(`‚ùå Gagal memproses suara.\nPastikan karakter *${char}* tersedia dan coba lagi.`);
  }
};

handler.command = ['ttsba', 'tts2', 'tts-blue-archive'];
handler.tags = ['tools'];
handler.help = ['ttsba <teks|karakter>'];
module.exports = handler;